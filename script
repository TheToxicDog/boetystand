local userId = "174142107" --PUT YOUR USERID HERE
local botPlayer = game.Players.LocalPlayer
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local Owner = game.Players:GetPlayerByUserId(userId)
local stopped = false
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local mouse = botPlayer:GetMouse()

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Ready!", "All")
local whitelist = {"OtherOcean"}
local combat = botPlayer.Backpack.Combat

local function whitelistuser(username)
    table.insert(whitelist, username)
    print(username .. " has been added to the whitelist.")
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(username .. " has been added to the whitelist.", "All")
end

local function unwhitelistuser(username)
    for i, name in ipairs(whitelist) do
        if name == username then
            table.remove(whitelist, i)
            print(username .. " has been removed from the whitelist.")
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(username .. " has been removed from the whitelist.", "All")
            return
        end
    end
    print(username .. " is not in the whitelist.")
end

local function viewwhitelist()
    print("Whitelisted players:")
    for _, player in ipairs(whitelist) do
        print(player)
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player, "All")
    end
end

local function summonBotToPlayer(bot, targetPlayer)
    if stopped then
        return nil
    else
        if botPlayer.Character and targetPlayer.Character then
            local targetPosition = targetPlayer.Character.PrimaryPart.Position
            local playerOrientation = targetPlayer.Character.PrimaryPart.CFrame.lookVector
            local offset = playerOrientation * -5
            local summonPosition = targetPosition + offset
            botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(summonPosition))
        
            local botPosition = botPlayer.Character.PrimaryPart.Position
            local lookAtPosition = Vector3.new(targetPosition.X, botPosition.Y, targetPosition.Z)
            botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(botPosition, lookAtPosition))
            wait()
            summonBotToPlayer(bot, targetPlayer)
        else
            print("Cannot summon: Missing character(s).")
        end
    end
end

local function gotoPlayer(username)
    print(botPlayer)
    print(username)
    local player = game.Players:FindFirstChild(username)
    if player then
        print("Bot summoned to " .. username)
        botPlayer.Character:SetPrimaryPartCFrame(player.Character.PrimaryPart.CFrame)
    else
        print("Player not found.")
        print(player.Name)
        print(player)
    end
end

local function knockplayer(username)
    local player = game.Players:FindFirstChild(username)
    if player then
        print("Knocking player " .. username)
        combat.Parent = botPlayer.Character
        local x, y = 100, 100
        VirtualInputManager:SendMouseButtonEvent(x, y, 0, true, game, 1)
        local targetPosition = player.Character.PrimaryPart.Position
        local playerOrientation = player.Character.PrimaryPart.CFrame.lookVector
        local offset = playerOrientation * -1
        local summonPosition = targetPosition + offset

        wait(1.4)
        
        local startTime = os.clock()
        repeat
            local targetPosition = player.Character.PrimaryPart.Position
            local playerOrientation = player.Character.PrimaryPart.CFrame.lookVector
            local offset = playerOrientation * -1
            local summonPosition = targetPosition + offset
            botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(summonPosition))
            wait()
        until os.clock() - startTime >= 2
        
        VirtualInputManager:SendMouseButtonEvent(x, y, 0, false, game, 1)
    else
        print("No player by that username found.")
    end
end

local function stopsummon()
    stopped = true
    wait()
    stopped = false
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("ok I will stop", "All")
end

local function rejoinGame()
    local PlaceId = game.PlaceId
    local JobId = game.JobId
    
    if #Players:GetPlayers() <= 1 then
        TeleportService:Teleport(PlaceId, botPlayer)
    else
        TeleportService:TeleportToPlaceInstance(PlaceId, JobId, botPlayer)
    end
end

local function botSay(message)
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
end

local commands = {
    ["summon"] = summonBotToPlayer,
    ["s"] = summonBotToPlayer,
    ["rejoin"] = rejoinGame,
    ["rj"] = rejoinGame,
    ["stop"] = stopsummon,
    ["say"] = botSay,
    ["goto"] = gotoPlayer,
    ["knock"] = knockplayer,
}
local ownercommands = {
    ["summon"] = summonBotToPlayer,
    ["s"] = summonBotToPlayer,
    ["rejoin"] = rejoinGame,
    ["rj"] = rejoinGame,
    ["stop"] = stopsummon,
    ["say"] = botSay,
    ["whitelist"] = whitelistuser,
    ["dewhitelist"] = unwhitelistuser,
    ["wl"] = whitelistuser,
    ["uwl"] = unwhitelistuser,
    ["wlview"] = viewwhitelist,
    ["whitelistview"] = viewwhitelist,
    ["goto"] = gotoPlayer,
    ["knock"] = knockplayer,
}

for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
    player.Chatted:Connect(function(message)
        if message:sub(1, 1) == "." then
            local parts = message:sub(2):split(" ")
            local command = parts[1]
            local args = {}
            for i = 2, #parts do
                table.insert(args, parts[i])
            end
            local func
            if table.find(whitelist, player.Name) then
                func = commands[command]
            elseif player == Owner then
                func = ownercommands[command]
            end
            if func then
                print(tostring(player) .. " said: " .. message)
                print("Player executed command: " .. command)
                if command == "say" then
                    local message = table.concat(args, " ")
                    func(message)
                elseif command == "whitelist" or command == "wl" or command == "unwhitelist" or command == "uwl" or command == "knock" or command == "goto" then
                    local username = table.concat(args, " ")
                    print("username: "..username)
                    func(username)
                else
                    func(botPlayer, player)
                end
            else
                print("Unknown command:", command)
            end
        end
    end)
end

if Owner then
    print("Welcome, " .. Owner.Name)
    return Owner
else
    print("User not found, retrying!")
    return nil
end
