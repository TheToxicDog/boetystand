local userId = "174142107"
local botPlayer = game.Players.LocalPlayer
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local Owner = game.Players:GetPlayerByUserId(userId)
local stopped = false
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local mouse = botPlayer:GetMouse() -- Change to botPlayer's mouse
local pos = botPlayer.Character.PrimaryPart.Position
game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Ready!", "All")
local whitelist = {"OtherOcean"}
local UserInputService = game:GetService("UserInputService")
local UFO = CFrame.new(66.5427094, 139, -697.639526)
_G.bring = null
local pos1 = botPlayer.Character.LowerTorso.Position
local combat
_G.finished = null
repeat
    combat = botPlayer.Backpack:FindFirstChild("Combat")
    wait(0.1) -- Wait for a short duration before rechecking
    print("waiting for combat tool")
    botPlayer.Character:SetPrimaryPartCFrame(UFO)
until combat

-- Function to add a user to the whitelist
local function whitelistuser(username)
    table.insert(whitelist, username)
    print(username .. " has been added to the whitelist.")
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(username .. " has been added to the whitelist.", "All")
end

-- Function to remove a user from the whitelist
local function unwhitelistuser(username)
    for i, name in ipairs(whitelist) do
        if name == username then
            table.remove(whitelist, i)
            print(username .. " has been removed from the whitelist.")
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(username .. " has been removed from the whitelist.", "All")
            return
        end
    end
    print(username .. " is not in the whitelist.")
end

-- Function to view the whitelist
local function viewwhitelist()
    print("Whitelisted players:")
    for _, player in ipairs(whitelist) do
        print(player)
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player, "All")
    end
end

local function summonBotToPlayer(bot, targetPlayer)
    if stopped then
        return nil
    else
        if botPlayer.Character and targetPlayer.Character then
            local targetPosition = targetPlayer.Character.PrimaryPart.Position
            local playerOrientation = targetPlayer.Character.PrimaryPart.CFrame.lookVector
            local offset = playerOrientation * -5 -- Adjust the distance as needed
            local summonPosition = targetPosition + offset
            botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(summonPosition))
        
            -- Preserve the bot's up and down orientation (pitch)
            local botPosition = botPlayer.Character.PrimaryPart.Position
            local lookAtPosition = Vector3.new(targetPosition.X, botPosition.Y, targetPosition.Z) -- Preserve the same height
            botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(botPosition, lookAtPosition))
            wait()
            summonBotToPlayer(bot, targetPlayer)
        else
            print("Cannot summon: Missing character(s).")
        end
    end
end
local function pressG()
    keypress(Enum.KeyCode.G)
end
local function pressE()
    keypress(Enum.KeyCode.E)
end
local function grab(username, pos1)
    local player = game.Players:FindFirstChild(username)
    print("grabbing:" ..username)
    local targetPosition = player.Character.PrimaryPart.Position

    local lookAtPosition = Vector3.new(targetPosition.X, 3, targetPosition.Z) -- Preserve the same height

    local targetPosition = player.Character.LowerTorso.Position
        botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition, lookAtPosition))
        wait(0.1)
        pressG()
        wait(0.1)
        if grabbed then
            botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(pos1))
        else if player.Character.BodyEffects["K.O"].Value == false then
            return
        else
            grab(username)
        end
    end
end
local function stomp(username)
    local player = game.Players:FindFirstChild(username)
    local targetPosition = player.Character.LowerTorso.Position
    local lookAtPosition = Vector3.new(targetPosition.X, 3, targetPosition.Z) -- Preserve the same height
    botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition.X, targetPosition.Y + 3, targetPosition.Z))
    wait(1)
    pressE()
    if player.Character.BodyEffects.Dead.Value == true then
        print("dead")
        stomp = false
    else
        print("missed, retrying")
        stomp(username)
    end
    wait(1)
    pressE()
    botPlayer.Character:SetPrimaryPartCFrame(UFO)
end
local function gotoPlayer(username)
    print(botPlayer)
    print(username)
    local player = game.Players:FindFirstChild(username)
    if player then
        print("Bot summoned to " .. username)
        botPlayer.Character:SetPrimaryPartCFrame(player.Character.PrimaryPart.CFrame)
    else
        print("Player not found.")
        print(player.Name)
        print(player)
    end
end

local function knockplayer(username)
    local player = game.Players:FindFirstChild(username)
    _G.finished = "false"
    if player then
        local pos = botPlayer.Character.PrimaryPart.Position
        print("Knocking player " .. username)
        combat.Parent = botPlayer.Character
        VirtualInputManager:SendMouseButtonEvent(100, 100, 0, true, game, 1) 
    
        wait(1.5) -- Wait for 1.5 seconds

        -- Look at the target player's position
        local targetPosition = player.Character.PrimaryPart.Position

        local lookAtPosition = Vector3.new(targetPosition.X, 3, targetPosition.Z) -- Preserve the same height
        local targetPosition2 = Vector3.new(targetPosition.X, targetPosition.Y + 2, targetPosition.Z)
        botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition2, lookAtPosition))

        wait(0.2) -- Wait for a short duration for better alignment

        VirtualInputManager:SendMouseButtonEvent(100, 100, 0, false, game, 1)
        wait(1)
        botPlayer.Character:SetPrimaryPartCFrame(UFO)
        if player.Character.BodyEffects["K.O"].Value == true then
            finished = true
            print("finishedknock")
            if _G.bring == true then 
                grab(username, targetPosition)
            else if _G.stomp == true then
                stomp(username)
            end
            end
        else
            knockplayer(username)
        end
    else
        print("No player by that username found.")
    end
end


local function bringplayer(username)
    local player = game.Players:FindFirstChild(username)
    if player then
        pos1 = botPlayer.Character.LowerTorso.Position
        print(tostring(pos1))
        local targetPosition = player.Character.PrimaryPart.Position
        if player.Character.BodyEffects["K.O"].Value == false then
            _G.bring = true
            knockplayer(username)
        else
            grab(username, pos1)
        end

        else if player.Character.BodyEffects["Grabbed"].Value == true then
            botPlayer.Character:SetPrimaryPartCFrame(pos)
            wait(0.5)
            pressG()
         else 
            botPlayer.Character:SetPrimaryPartCFrame(pos)
            pressG()
            print("this one dood")
end

    end
        botPlayer.Character:SetPrimaryPartCFrame(CFrame.new(pos1))
        wait(0.5)
        pressG()
        print("gbring = false one")
        _G.bring = false
        end


local function stompplayer(username)
    local player = game.Players:FindFirstChild(username)
    local dead = player.Character.BodyEffects.Dead.Value
    _G.stomp = true
    if player then
        local pos1 = botPlayer.Character.PrimaryPart.Position
        print(tostring(pos1))
        local targetPosition = player.Character.PrimaryPart.Position
        knockplayer(username)
    end
end


local function stopsummon()
    stopped = true
    wait()
    stopped = false
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("ok I will stop", "All")
end

-- Function to rejoin the game
local function rejoinGame()
    local PlaceId = game.PlaceId
    local JobId = game.JobId
    
    if #Players:GetPlayers() <= 1 then
        TeleportService:Teleport(PlaceId, botPlayer)
    else
        TeleportService:TeleportToPlaceInstance(PlaceId, JobId, botPlayer)
    end
end

-- Function to make the bot say something
local function botSay(message)
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
end

local commands = {
    ["summon"] = summonBotToPlayer,
    ["s"] = summonBotToPlayer,  -- Alias for summon command
    ["rejoin"] = rejoinGame,
    ["rj"] = rejoinGame,  -- Alias for rejoin command
    ["stop"] = stopsummon,
    ["say"] = botSay, -- Command to make the bot say something
    ["goto"] = gotoPlayer,
    ["knock"] = knockplayer,
    ["bring"] = bringplayer,
    ["stomp"] = stompplayer,
}
local ownercommands = {
    ["summon"] = summonBotToPlayer,
    ["s"] = summonBotToPlayer,  -- Alias for summon command
    ["rejoin"] = rejoinGame,
    ["rj"] = rejoinGame,  -- Alias for rejoin command
    ["stop"] = stopsummon,
    ["say"] = botSay, -- Command to make the bot say something
    ["whitelist"] = whitelistuser,
    ["dewhitelist"] = unwhitelistuser,
    ["wl"] = whitelistuser,
    ["uwl"] = unwhitelistuser,
    ["wlview"] = viewwhitelist,
    ["whitelistview"] = viewwhitelist,
    ["goto"] = gotoPlayer,
    ["knock"] = knockplayer,
    ["bring"] = bringplayer,
    ["stomp"] = stompplayer,
}

for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
    player.Chatted:Connect(function(message)
        if message:sub(1, 1) == "." then
            local parts = message:sub(2):split(" ")
            local command = parts[1]
            local args = {}
            for i = 2, #parts do
                table.insert(args, parts[i])
            end
            local func
            if table.find(whitelist, player.Name) then
                func = commands[command]
            elseif player == Owner then
                func = ownercommands[command]
            end
            if func then
                print(tostring(player) .. " said: " .. message)
                print("Player executed command: " .. command)
                if command == "say" then
                    local message = table.concat(args, " ")
                    func(message)
                elseif command == "whitelist" or command == "wl" or command == "unwhitelist" or command == "uwl" or command == "knock" or command == "goto" or command == "bring" or command == "stomp" then
                    local username = table.concat(args, " ")
                    print("username: "..username)
                    func(username)
                else
                    func(botPlayer, player)
                end
            else
                print("Unknown command:", command)
            end
        end
    end)
end

if Owner then
    print("Welcome, " .. Owner.Name)
    return Owner
else
    print("User not found, retrying!")
    return nil
end
